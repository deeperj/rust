import { none } from './option.mjs';
import { pipe, defer } from './functions.mjs';
import { subscribe as subscribe$1 } from './observable.mjs';
import { dispose } from './disposable.mjs';

class ObservableSvelteStore {
    constructor(observable, scheduler) {
        this.observable = observable;
        this.scheduler = scheduler;
    }
    subscribe(callback) {
        callback(none);
        const subscription = pipe(this.observable, subscribe$1(this.scheduler, callback));
        return defer(subscription, dispose);
    }
}
const subscribe = (scheduler) => obs => new ObservableSvelteStore(obs, scheduler);

export { subscribe };
